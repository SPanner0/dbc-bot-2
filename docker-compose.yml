networks:
  postgresql:
    driver: bridge
volumes:
  postgres_data:
    
services:
  dbc-bot:
    container_name: dbc-bot
    volumes:
      - /etc/ssl/certs/:/etc/ssl/certs:ro
    build:
      context: ./dbc-bot
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/${POSTGRES_DB}
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      BRAWL_STARS_TOKEN: ${BRAWL_STARS_TOKEN}
    restart: always
    networks:
      - postgresql
    
  postgresql:  
    container_name: postgresql
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dbc-bot/migrations/entrypoint.sh:/entrypoint.sh
      - ./dbc-bot/migrations:/docker-entrypoint-initdb.d
    restart: always
    entrypoint: ["/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - postgresql